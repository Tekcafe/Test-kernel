--- kernel/fs/ext4/super.c	2013-01-29 10:58:12.000000000 +0700
+++ fs/ext4/super.c	2013-11-24 07:53:18.000000000 +0700
@@ -54,6 +54,10 @@
 #define CREATE_TRACE_POINTS
 #include <trace/events/ext4.h>
 
+#ifdef CONFIG_PANTECH_EXT4_USERDATA_RECOVERY //leecy add for recovery userdata
+#include "../../arch/arm/mach-msm/sky_sys_reset.h"
+#endif /* CONFIG_PANTECH_EXT4_USERDATA_RECOVERY */
+
 static struct proc_dir_entry *ext4_proc_root;
 static struct kset *ext4_kset;
 static struct ext4_lazy_init *ext4_li_info;
@@ -479,6 +483,15 @@
 	if (test_opt(sb, ERRORS_RO)) {
 		ext4_msg(sb, KERN_CRIT, "Remounting filesystem read-only");
 		sb->s_flags |= MS_RDONLY;
+#ifdef CONFIG_PANTECH_EXT4_USERDATA_RECOVERY //leecy add for recovery userdata
+
+		if(strcmp(sb->s_id, "mmcblk0p26")==0)
+		{
+			sky_reset_reason =  SYS_RESET_REASON_USERDATA_FS;
+			panic("EXT4-fs (device %s) ERRORS_RO : panic forced after error\n",
+			sb->s_id);
+	}
+#endif /* CONFIG_PANTECH_EXT4_USERDATA_RECOVERY */
 	}
 	if (test_opt(sb, ERRORS_PANIC))
 		panic("EXT4-fs (device %s): panic forced after error\n",
@@ -654,6 +667,16 @@
 		if (EXT4_SB(sb)->s_journal)
 			jbd2_journal_abort(EXT4_SB(sb)->s_journal, -EIO);
 		save_error_info(sb, function, line);
+
+#ifdef CONFIG_PANTECH_EXT4_USERDATA_RECOVERY //leecy add for recovery userdata
+
+		if(strcmp(sb->s_id, "mmcblk0p26")==0)
+		{
+			sky_reset_reason =  SYS_RESET_REASON_USERDATA_FS;
+			panic("EXT4-fs (device %s) ERRORS_RO : panic forced after error\n",
+			sb->s_id);
+	}
+#endif	/* CONFIG_PANTECH_EXT4_USERDATA_RECOVERY */	
 	}
 	if (test_opt(sb, ERRORS_PANIC))
 		panic("EXT4-fs panic from previous error\n");
